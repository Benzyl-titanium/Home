---
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";

interface Props {
	class?: string;
}

const className = Astro.props.class;
---

<div class:list={["card-base px-8 py-6", className]}>
  <div class="giscus"></div>
</div>

<script>
  console.log('Comments.astro script loaded.');

  const loadGiscus = () => {
    console.log('loadGiscus function called.');
    const container = document.querySelector('.giscus');
    if (container) {
      console.log('Giscus container found. Clearing existing children...');
      while (container.firstChild) {
        container.removeChild(container.firstChild);
      }
    } else {
      console.log('Giscus container not found.');
      return;
    }

    const script = document.createElement('script');
    script.src = 'https://giscus.app/client.js';
    script.setAttribute('data-repo', 'Benzyl-titanium/Home');
    script.setAttribute('data-repo-id', 'R_kgDOOrZ0pA');
    script.setAttribute('data-category', 'General');
    script.setAttribute('data-category-id', 'DIC_kwDOOrZ0pM4CrkrZ');
    script.setAttribute('data-mapping', 'pathname');
    script.setAttribute('data-strict', '0');
    script.setAttribute('data-reactions-enabled', '1');
    script.setAttribute('data-emit-metadata', '0');
    script.setAttribute('data-input-position', 'bottom');
    script.setAttribute('data-theme', 'preferred_color_scheme');
    script.setAttribute('data-lang', 'zh-CN');
    script.setAttribute('crossorigin', 'anonymous');
    script.async = true;

    container.appendChild(script);
    console.log('Giscus script appended.');
  };

  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'data-theme') {
        console.log('Theme attribute changed. Attempting to update Giscus theme.');
        const giscusFrame = document.querySelector('iframe.giscus-frame') as HTMLIFrameElement;
        if (giscusFrame) {
          giscusFrame.contentWindow?.postMessage(
            { giscus: { setConfig: { theme: document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light' } } },
            'https://giscus.app'
          );
        } else {
          console.log('Giscus iframe not found for theme update.');
        }
      }
    });
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['data-theme']
  });

  document.addEventListener('DOMContentLoaded', loadGiscus);
  console.log('DOMContentLoaded listener added.');

  if (window.swup) {
    console.log('Swup detected. Binding loadGiscus to contentReplaced event.');
    window.swup.on('contentReplaced', loadGiscus);
  } else {
    console.log('Swup not detected.');
  }
</script> 